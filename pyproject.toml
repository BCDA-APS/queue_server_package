[project]
name = "queue_server_package"
version = "0.0.1"
description = "APS Queue Server Package"
authors = [
    {name = "Eric Codrea", email = "ecodrea@anl.gov"},
    {name = "Ollivier Gassant", email = "ollivier.gassant@gmail.com"},
    {name = "Pete Jemian", email = "pjemien@anl.gov"},
    {name = "Rafael Vescovi", email = "ravescovi@anl.gov"},
]
requires_python = ">=3.10"
readme = "README.md"
license = ""
dependencies = [
    "8_id_tools",
    "apstools",
    "bluesky",
    "bluesky_queueserver",
    "ophyd",
    "opyd_registry",
    "hdf5plugin",
    "IPython",
]

[project.optional-dependencies]
dev = [
    "build",
    "mypy",
    "pre-commit",
    "pytest>=7.4.4",
    "ruff",
]

[project.urls]
Homepage = "https://github.com/BCDA-APS/queue_server_package"

######################
# Build Info + Tools #
######################

[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = {"queue_server_package" = "src/instrument"}

[tool.setuptools.package-data]
"*" = ["*.txt", "*.yml"]

#####################
# Development Tools #
#####################

[tool.ruff]
# https://docs.astral.sh/ruff/configuration/

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    ".venv",
    "docs",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.10
target-version = "py310"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    # "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    # "SIM",
    # isort
    "I",
    # Warning
    "W",
    # pydocstyle
    "D100", "D101", "D102", "D103", "D104", "D105", "D106", "D107",
    # ruff
    # "RUF"
]
ignore = [
    "E501" # Line too long
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.pytest.ini_options]
# https://docs.pytest.org/en/stable/customize.html
addopts = "-x"
junit_family="xunit1"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::pottery.exceptions.InefficientAccessWarning",
]
